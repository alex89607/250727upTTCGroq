{"sample_id": "worf_0000", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "high", "domain": "machine"}}
{"sample_id": "worf_0001", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "medium", "domain": "machine"}}
{"sample_id": "worf_0002", "prompt": "Design a database schema for an e-commerce platform that needs to handle products, orders, customers, inventory, and reviews. Consider scalability and performance.", "ground_truth": "Core tables: Users, Products, Categories, Orders, OrderItems, Reviews, Inventory. Key considerations: 1) Separate order items from orders for flexibility, 2) Index on frequently queried fields (user_id, product_id, created_at), 3) Consider partitioning orders by date, 4) Use separate inventory table for stock tracking, 5) Implement soft deletes for data integrity, 6) Consider read replicas for product catalog queries.", "metadata": {"category": "system_design", "complexity": "high", "domain": "system"}}
{"sample_id": "worf_0003", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "medium", "domain": "machine"}}
{"sample_id": "worf_0004", "prompt": "Design a database schema for an e-commerce platform that needs to handle products, orders, customers, inventory, and reviews. Consider scalability and performance.", "ground_truth": "Core tables: Users, Products, Categories, Orders, OrderItems, Reviews, Inventory. Key considerations: 1) Separate order items from orders for flexibility, 2) Index on frequently queried fields (user_id, product_id, created_at), 3) Consider partitioning orders by date, 4) Use separate inventory table for stock tracking, 5) Implement soft deletes for data integrity, 6) Consider read replicas for product catalog queries.", "metadata": {"category": "system_design", "complexity": "low", "domain": "system"}}
{"sample_id": "worf_0005", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "medium", "domain": "machine"}}
{"sample_id": "worf_0006", "prompt": "Design a database schema for an e-commerce platform that needs to handle products, orders, customers, inventory, and reviews. Consider scalability and performance.", "ground_truth": "Core tables: Users, Products, Categories, Orders, OrderItems, Reviews, Inventory. Key considerations: 1) Separate order items from orders for flexibility, 2) Index on frequently queried fields (user_id, product_id, created_at), 3) Consider partitioning orders by date, 4) Use separate inventory table for stock tracking, 5) Implement soft deletes for data integrity, 6) Consider read replicas for product catalog queries.", "metadata": {"category": "system_design", "complexity": "high", "domain": "system"}}
{"sample_id": "worf_0007", "prompt": "Design a database schema for an e-commerce platform that needs to handle products, orders, customers, inventory, and reviews. Consider scalability and performance.", "ground_truth": "Core tables: Users, Products, Categories, Orders, OrderItems, Reviews, Inventory. Key considerations: 1) Separate order items from orders for flexibility, 2) Index on frequently queried fields (user_id, product_id, created_at), 3) Consider partitioning orders by date, 4) Use separate inventory table for stock tracking, 5) Implement soft deletes for data integrity, 6) Consider read replicas for product catalog queries.", "metadata": {"category": "system_design", "complexity": "medium", "domain": "system"}}
{"sample_id": "worf_0008", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "low", "domain": "business"}}
{"sample_id": "worf_0009", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "medium", "domain": "business"}}
{"sample_id": "worf_0010", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "high", "domain": "technical"}}
{"sample_id": "worf_0011", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "medium", "domain": "technical"}}
{"sample_id": "worf_0012", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "medium", "domain": "technical"}}
{"sample_id": "worf_0013", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "low", "domain": "technical"}}
{"sample_id": "worf_0014", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "low", "domain": "business"}}
{"sample_id": "worf_0015", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "medium", "domain": "business"}}
{"sample_id": "worf_0016", "prompt": "Design a database schema for an e-commerce platform that needs to handle products, orders, customers, inventory, and reviews. Consider scalability and performance.", "ground_truth": "Core tables: Users, Products, Categories, Orders, OrderItems, Reviews, Inventory. Key considerations: 1) Separate order items from orders for flexibility, 2) Index on frequently queried fields (user_id, product_id, created_at), 3) Consider partitioning orders by date, 4) Use separate inventory table for stock tracking, 5) Implement soft deletes for data integrity, 6) Consider read replicas for product catalog queries.", "metadata": {"category": "system_design", "complexity": "high", "domain": "system"}}
{"sample_id": "worf_0017", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "high", "domain": "technical"}}
{"sample_id": "worf_0018", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "medium", "domain": "machine"}}
{"sample_id": "worf_0019", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "high", "domain": "business"}}
{"sample_id": "worf_0020", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "low", "domain": "technical"}}
{"sample_id": "worf_0021", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "medium", "domain": "machine"}}
{"sample_id": "worf_0022", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "high", "domain": "technical"}}
{"sample_id": "worf_0023", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "low", "domain": "machine"}}
{"sample_id": "worf_0024", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "high", "domain": "machine"}}
{"sample_id": "worf_0025", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "low", "domain": "business"}}
{"sample_id": "worf_0026", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "low", "domain": "technical"}}
{"sample_id": "worf_0027", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "medium", "domain": "business"}}
{"sample_id": "worf_0028", "prompt": "Design a database schema for an e-commerce platform that needs to handle products, orders, customers, inventory, and reviews. Consider scalability and performance.", "ground_truth": "Core tables: Users, Products, Categories, Orders, OrderItems, Reviews, Inventory. Key considerations: 1) Separate order items from orders for flexibility, 2) Index on frequently queried fields (user_id, product_id, created_at), 3) Consider partitioning orders by date, 4) Use separate inventory table for stock tracking, 5) Implement soft deletes for data integrity, 6) Consider read replicas for product catalog queries.", "metadata": {"category": "system_design", "complexity": "low", "domain": "system"}}
{"sample_id": "worf_0029", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "high", "domain": "business"}}
{"sample_id": "worf_0030", "prompt": "Design a database schema for an e-commerce platform that needs to handle products, orders, customers, inventory, and reviews. Consider scalability and performance.", "ground_truth": "Core tables: Users, Products, Categories, Orders, OrderItems, Reviews, Inventory. Key considerations: 1) Separate order items from orders for flexibility, 2) Index on frequently queried fields (user_id, product_id, created_at), 3) Consider partitioning orders by date, 4) Use separate inventory table for stock tracking, 5) Implement soft deletes for data integrity, 6) Consider read replicas for product catalog queries.", "metadata": {"category": "system_design", "complexity": "medium", "domain": "system"}}
{"sample_id": "worf_0031", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "low", "domain": "technical"}}
{"sample_id": "worf_0032", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "high", "domain": "business"}}
{"sample_id": "worf_0033", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "high", "domain": "business"}}
{"sample_id": "worf_0034", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "medium", "domain": "technical"}}
{"sample_id": "worf_0035", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "high", "domain": "business"}}
{"sample_id": "worf_0036", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "low", "domain": "business"}}
{"sample_id": "worf_0037", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "high", "domain": "business"}}
{"sample_id": "worf_0038", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "low", "domain": "machine"}}
{"sample_id": "worf_0039", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "high", "domain": "technical"}}
{"sample_id": "worf_0040", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "low", "domain": "business"}}
{"sample_id": "worf_0041", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "low", "domain": "technical"}}
{"sample_id": "worf_0042", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "high", "domain": "business"}}
{"sample_id": "worf_0043", "prompt": "Design a database schema for an e-commerce platform that needs to handle products, orders, customers, inventory, and reviews. Consider scalability and performance.", "ground_truth": "Core tables: Users, Products, Categories, Orders, OrderItems, Reviews, Inventory. Key considerations: 1) Separate order items from orders for flexibility, 2) Index on frequently queried fields (user_id, product_id, created_at), 3) Consider partitioning orders by date, 4) Use separate inventory table for stock tracking, 5) Implement soft deletes for data integrity, 6) Consider read replicas for product catalog queries.", "metadata": {"category": "system_design", "complexity": "high", "domain": "system"}}
{"sample_id": "worf_0044", "prompt": "Explain the trade-offs between microservices and monolithic architecture for a startup with 5 engineers building a social media platform.", "ground_truth": "For a 5-person startup, monolithic architecture is typically better initially. Benefits: faster development, easier debugging, simpler deployment, less operational overhead. Microservices add complexity that small teams can't handle effectively. Consider microservices later when team grows beyond 15-20 engineers and clear service boundaries emerge.", "metadata": {"category": "technical_architecture", "complexity": "high", "domain": "technical"}}
{"sample_id": "worf_0045", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "high", "domain": "business"}}
{"sample_id": "worf_0046", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "medium", "domain": "business"}}
{"sample_id": "worf_0047", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "low", "domain": "machine"}}
{"sample_id": "worf_0048", "prompt": "Analyze the following business scenario and provide strategic recommendations: A SaaS company has 10,000 users, 15% churn rate, and $50 ARPU. They want to expand to enterprise market. What should they consider?", "ground_truth": "The company should focus on reducing churn rate first, as 15% is high for SaaS. For enterprise expansion, they need dedicated sales team, enterprise features like SSO and compliance, longer contract terms, and higher price points. Current metrics suggest solid foundation but retention needs improvement before scaling.", "metadata": {"category": "business_analysis", "complexity": "medium", "domain": "business"}}
{"sample_id": "worf_0049", "prompt": "A machine learning model shows 95% accuracy on training data but 70% on validation data. The training set has 10,000 samples, validation has 1,000. What's happening and how to fix it?", "ground_truth": "This indicates overfitting - the model memorized training data rather than learning generalizable patterns. Solutions: 1) Regularization (L1/L2, dropout), 2) More training data, 3) Simpler model architecture, 4) Cross-validation, 5) Early stopping, 6) Data augmentation. The large gap between train/validation accuracy is the key indicator.", "metadata": {"category": "machine_learning", "complexity": "low", "domain": "machine"}}
